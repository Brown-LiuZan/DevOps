The main reference:
https://gcc.gnu.org/install/

Steps:
1) check prerequistes
    g++ --version #Check if we have g++ installed.
    yum install gcc-c++ #Install g++ if not installed.
    gcc --verion //cc --version
    awk --version
    yum list binutils | apt list binutils
    gzip --version
    bzip2 --version
    make --version
    tar --verson
    perl --version
    m4 --version
    autoconf --version
    automake --version
    gettext --verion
    gperf --version
    yum list dejagnu | apt list dejagnu
    tcl --version
    autogen --version
    guile --version
    flex --version
    texinfo --version
    tex --version
    yum list diffutils | apt list diffutils
    ssh --version
    patch --version
    yum install expect

2) download gcc tarball from fastest mirror site
    cd $HOME/Downloads
    wget https://mirrors.tuna.tsinghua.edu.cn/gnu/gcc/gcc-7.3.0/gcc-7.3.0.tar.xz
    #wget https://mirrors.tuna.tsinghua.edu.cn/gnu/gcc/gcc-6.4.0/gcc-6.4.0.tar.xz
    #wget https://mirrors.tuna.tsinghua.edu.cn/gnu/gcc/gcc-5.5.0/gcc-5.5.0.tar.xz
    #wget https://mirrors.tuna.tsinghua.edu.cn/gnu/gcc/gcc-4.9.4/gcc-4.9.4.tar.bz2
    tar -xJf gcc-*.xz
    #tar -xjf gcc-*.bz2
    cd gcc-x.y.z
    ./contrib/download_prerequisites  #Download gmp, mpfr, mpc and isl into the toplevel dir of GCC source code
    #You could download these packages from ftp://gcc.gnu.org/pub/gcc/infrastructure/
    #Or: https://mirrors.tuna.tsinghua.edu.cn/gnu/

3) configure gcc before build
    mkdir /usr/local/gcc-7.3.0
    #mkdir /usr/local/gcc-6.4.0
    #mkdir /usr/local/gcc-5.5.0
    #mkdir /usr/local/gcc-4.9.4
    cd /usr/local/gcc-x.y.z
    mkdir objdir
    cd objdir
    #The purpose of --prefix is to specify where to install GCC.
    #To specify programming languages supported by GCC, use: --enable-languages=all|default|c,c++,fortran,ada,go,jit,lto,objc,objc++
    #default=c,c++,fortran
    $HOME/Downloads/gcc-x.y.z/configure --prefix=/usr/local/gcc-x.y.z --program-prefix=brown- --program-suffix=-x.y.z --disable-multilib --enable-languages=c,c++
    /home/brown/Downloads/gcc-4.9.4/configure --prefix=/usr/local/gcc-4.9.4 --program-prefix=brown- --program-suffix=-4.9.4 --disable-multilib --enable-languages=c,c++
    /home/brown/Downloads/gcc-6.5.0/configure --prefix=/usr/local/gcc-6.5.0 --program-prefix=brown- --program-suffix=-6.5.0 --disable-multilib --enable-languages=c,c++
    /home/brown/Downloads/gcc-7.4.0/configure --prefix=/usr/local/gcc-7.4.0 --program-prefix=brown- --program-suffix=-7.4.0 --disable-multilib --enable-languages=c,c++
    /home/brown/Downloads/gcc-8.3.0/configure --prefix=/usr/local/gcc-8.3.0 --program-prefix=brown- --program-suffix=-8.3.0 --disable-multilib --enable-languages=c,c++
    /home/brown/Downloads/gcc-9.1.0/configure --prefix=/usr/local/gcc-9.1.0 --program-prefix=brown- --program-suffix=-9.1.0 --disable-multilib --enable-languages=c,c++
4) build
    cd /usr/local/gcc-x.y.z/objdir
    make -j N #N is the number of CPU cores in your system.

5) testing [optinal]
    whereis expect #Check if 'expect' has installed into one of standard $PATH directories.
    whereis runtest
    cd /usr/local/gcc-x.y.z/objdir
    make -k check

6) install
    cd /usr/local/gcc-x.y.z/objdir
    make install

Libraries have been installed in:
   /usr/local/gcc-5.5.0/lib/../lib64
-
#If you ever happen to want to link against installed libraries
#in a given directory, LIBDIR, you must either use libtool, and
#specify the full pathname of the library, or use the `-LLIBDIR'
#flag during linking and do at least one of the following:
#   - add LIBDIR to the `LD_LIBRARY_PATH' environment variable
#     during execution
#   - add LIBDIR to the `LD_RUN_PATH' environment variable
#     during linking
#   - use the `-Wl,-rpath -Wl,LIBDIR' linker flag
#   - have your system administrator add LIBDIR to `/etc/ld.so.conf'
#
#See any operating system documentation about shared libraries for
#more information, such as the ld(1) and ld.so(8) manual pages.

7) setup symblinks to gcc
    cd /usr/bin
    ln -s /usr/local/gcc-x.y.z/bin/brown-gcc-x.y.z brown-gcc-x.y.z

8) update symlink /usr/lib64/libstdc++.so.6 to the newest version
    strings /usr/lib64/libstdc++.so.6
    cd /usr/lib64
    ln -s /usr/local/gcc-x.y.z/lib64/libstdc++.so.6.x.y libstdc++.so.6
