#brown-smb.conf
#
#Procedure to share out a SMB/CIFS folder with Samba:
#    => Install samba:
#        yum install smb
#    => mv /etc/samba/smb.conf /etc/samba/smb.conf.bak.
#    => Rename this file as smb.conf and place it under /etc/samba.
#    => If needed, modify paramters or sectors of smb.conf.
#    => Run 'testparm' to verify smb.conf.
#    => Create shared folder and reload/restart smb/nmb:
#        mkdir -p /home/brown/Samba/Anonymous #Creat an anonymous shared folder.
#        sudo chmod -R 0777 /home/brown/Samba/Anonymous #Enable all access rights.
#        sudo chown -R nobody:nobody /home/brown/Samba/Anonymous #Enable anonymous access from everyone.
#        sudo chcon -t samba_shared_t /home/brown/Samba/Anonymous #Enable SELinux for Samba configuration.
#        mkdir -p /home/brown/Samba/Secured
#        sudo chmod -R 0777 /home/brown/Samba/Secured
#        sudo groupadd smbgrp #Create a new SMB group if no one there.
#        sudo usermod -a brown -G smbgrp #Add user to group.
#        sudo chown -R brown:smbgrp /home/brown/Samba/Secured
#        sudo chcon -t samba_share_t /home/brown/Samba/Secured
#        sudo smbpasswd -L -a brown
#        sudo smbpasswd -L -e brown
#        sudo firewall-cmd --permanent --zone=public --add-service=samba #Add samba service to public zone for openning the port in firewall.
#        sudo firewall-cmd --reload #Reload firewall permanent rules to make the above modification to take effect.
#        sudo systemctl reload-or-restart smb
#        sudo systemctl reload-or-restart nmb
#
#References:
#    https://www.howtoforge.com/samba-server-installation-and-configuration-on-centos-7
#    man smb.conf
#
#File format:
#The file consists of sections and parameters.
#A section begins with the name of the section in square brackets and continues until the next section begins.
#Sections contain parameters of the form:
#    name = value
#The file is line-based - that is, each newline-terminated line represents either a comment, a section name or a parameter.
#Section and parameter names are not case sensitive.
#Only the first equals sign in a parameter is significant. Whitespace before or after the first equals sign is discarded. 
#Leading, trailing and internal whitespace in section and parameter names is irrelevant.
#Leading and trailing whitespace in a parameter value is discarded. Internal whitespace within a parameter value is retained verbatim.
#Any line beginning with a semicolon (“;”) or a hash (“#”) character is ignored, as are lines containing only whitespace.
#Any line ending in a “\” is continued on the next line in the customary UNIX fashion.
#The values following the equals sign in parameters are all either a string (no quotes needed) or a boolean, which may be given as yes/no, 1/0 or true/false.
#Case is not significant in boolean values, but is preserved in string values.
#Some items such as create masks are numeric.
#Each section in the configuration file (except for the [global] section) describes a shared resource (known as a “share”). 
#The section name is the name of the shared resource and the parameters within the section define the shares attributes.
#There are three special sections, [global], [homes] and [printers].
#For special sections:
#    The [global] section: Parameters in this section apply to the server as a whole, or are defaults for sections that do not specifically define certain items.
#    The [homes] section:
#        If a section called [homes] is included in the configuration file, services connecting clients to their home directories can be created on the fly by the server.
#        When the connection request is made, the existing sections are scanned. If a match is found, it is used.
#        If no match is found, the requested section name is treated as a username and looked up in the local password file.
#        If the name exists and the correct password has been given, a share is created by cloning the [homes] section.
#        Some modifications are then made to the newly created share:
#            The share name is changed from homes to the located username.
#            If no path was given, the path is set to the user's home directory.
#        An important point is that if guest access is specified in the [homes] section, all home directories will be visible to all clients without a password.
#        In the very unlikely event that this is actually desirable, it is wise to also specify read only access.
#        The browseable flag for auto home directories will be inherited from the global browseable flag, not the [homes] browseable flag. 
#        This is useful as it means setting browseable = no in the [homes] section will hide the [homes] share but make any auto home directories visible. 
#    The [printers] section:
#        This section works like [homes], but for printers.
#        If a [printers] section occurs in the configuration file, users are able to connect to any printer specified in the local host's printcap file.
#        When a connection request is made, the existing sections are scanned. If a match is found, it is used.
#        If no match is found, but a [homes] section exists, it is used as described above.
#        Otherwise,the requested section name is treated as a printer name and the appropriate printcap file is scanned to see if the requested section name is a valid printer share name.
#        If a match is found, a new printer share is created by cloning the [printers] section.
#        A few modifications are then made to the newly created share:
#            The share name is set to the located printer name.
#            If no printer name was given, the printer name is set to the located printer name.
#            If the share does not permit guest access and no username was given, the username is set to the located printer name.
#        The [printers] service MUST be printable - if you specify otherwise, the server will refuse to load the configuration file.
#        Typically the path specified is that of a world-writeable spool directory with the sticky bit set on it.
#        A typical [printers] entry looks like this:
#            [printers]
#            path = /usr/spool/public
#            guest ok = yes
#            printable = yes
#
#For ordinary sections:
#    A share consists of a directory to which access is being given plus a description of the access rights which are granted to the user of the service.
#    Some housekeeping options are also specifiable.
#    Sections are either file share services (used by the client as an extension of their native file systems) or
#    printable services (used by the client to access print services on the host running the server).
#    Sections may be designated guest services, in which case no password is required to access them.
#    A specified UNIX guest account is used to define access privileges in this case.
#    Sections other than guest services will require a password to access them. The client provides the username.
#    As older clients only provide passwords and not usernames, you may specify a list of usernames to check against the password using the user = option in the share definition.
#    For modern clients such as Windows 95/98/ME/NT/2000, this should not be necessary.
#    The access rights granted by the server are masked by the access rights granted to the specified or guest UNIX user by the host system.
#    The server does not grant more access than the host system grants.
#    The following sample section defines a file space share. The user has write access to the path /home/bar. The share is accessed via the share name foo:
#        [foo]
#        path = /home/bar
#        read only = no
#    The following sample section defines a printable share. The share is read-only, but printable.
#    That is, the only write access permitted is via calls to open, write to and close a spool file
#    The guest ok parameter means access will be permitted as the default guest user (specified elsewhere):
#        [aprinter]
#        path = /usr/spool/public
#        read only = yes
#        printable = yes
#        guest ok = yes


[global]
#Windows NT domain/workspace name.
#Run the following command in Windows prompt windom:
#    net config workstation
#Use the 'Workstation name' as the value of the following 'workgroup' parameter.
#Besides, run 'cmd' as administrator and run the following command:
#    notepad c:\Windows\System32\drivers\etc\hosts
#Then, append the following DNS record:
#    192.168.1.11 centos.asus-vm.brown Brown-AsusVm-CentOS
workgroup = WORKGROUP

server string = Samba %v

#Netbios server name. This must be identical to the third column in C:\Windows\System32\drivers\etc\hosts.
netbios name = Brown-AsusVm-CentOS

#Samba authentication method.
#user   : Each user will have an account on the machine hosting Samba.
#ADS    : Active Directory mode.
#Domain : This type is a centrally located account which is shared between domain controllers.
#share  : Clients will authenticate against a particular share on the Samba server.
security = user

map to guest = bad user

dns proxy = no


[Anonymous]
path = /home/brown/Samba/Anonymous
guest ok = yes
writable = yes
browsable = yes


[Secured]
path = /home/brown/Samba/Secured
valid users = @smbgrp
guest ok = no
writable = yes
browsable = yes
